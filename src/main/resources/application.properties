spring.application.name=drip_shop

#server.servlet.context-path=/api

spring.datasource.url=jdbc:postgresql://${DB_HOST}:5432/${DB_NAME}

spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=update

spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect



spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_EMAIL}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.starttls.enable = true
spring.mail.properties.mail.smtp.auth = true

#jwt

jwt.auth.app=auApp
jwt.auth.secret_key=${JWT_KEY}
jwt.auth.expires_in=3600

#google
# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google..client-name=Google


spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

stripe.secret=${STRIPE_SECRET}


